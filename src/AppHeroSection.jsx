import React, { useState, useEffect, useRef } from 'react';
import { motion, useInView, animate, AnimatePresence } from 'framer-motion';
import kaalSarpDoshImg from '@/assets/poojas/kaal-sarp-dosh.webp';
import PoojaCard from './components/PoojaCard';
import { poojaServicesData } from './data/poojaServices';
import { useNavigate } from 'react-router-dom';

// Import banner images
import weddingBannerImg from './assets/Banner/weedingherosection.webp';
import ritualsBannerImg from './assets/Banner/RitualsBannerHeroSection.webp';
import astrologyBannerImg from './assets/Banner/AstrologyHeroSection.webp';
import matchmakingBannerImg from './assets/Banner/SpirituallyGuidedIndianMatchmaking.webp';

// Import logo
import logoImg from './assets/logo.webp';

// Import service images
import vedicPoojaServicesImg from './assets/HeroPage/Vedic Pooja Services.webp';
import astrologyConsultationsImg from './assets/HeroPage/Astrology Consultations.webp';
import onlineEPoojaImg from './assets/HeroPage/Online  E-Pooja.webp';

// --- Multi-language Support (i18n simulation) ---
const translations = {
  en: {
    navHome: "Home",
    navAbout: "About",
    navServices: "Services",
    navAstrology: "Astrology",
    navTestimonials: "Testimonials",
    navBlog: "Blog",
    navContact: "Contact",
    heroHeadline: "Authentic Vedic Pujas, Just a Click Away",
    heroSubText1: "Experience the divine grace of Sanatan Dharma through authentic Vedic Pujas, personalized Astrology, and sacred rituals performed by trusted Pandits with 12+ years of experience across India.",
    heroSubText2: "Bringing peace, prosperity, and positive energy to every home with devotion and purity.",
    bookPoojaNow: "ЁЯУ┐ Book Your Pooja Now",
    bookAstrology: "ЁЯФо Book Astrology Session",
    servicesTitle: "Our Divine Services",
    poojaServices: "Pooja Services",
    astrologyServices: "Astrology",
    onlinePooja: "Online / E-Pooja",
    learnMore: "Learn More тЖТ",
    aboutTitle: "Meet Pandit Aditya Narayan Ji",
    aboutText: "With over 12 years of experience performing sacred rituals across India, Pandit Aditya Narayan Ji is known for authentic vedic poojas done as per Sanatan Vidhi. Guided by his father, a revered priest, he continues a legacy of devotion and spiritual service.",
    readMore: "Read More",
    whyChooseUsTitle: "Why Choose Us?",
    spiritualGuides: "Spiritual Guides",
    guidesDesc: "Priests, Pandits, Religious Experts & Consultants",
    typesOfPooja: "Types of Pooja",
    poojaDesc: "Covering all major Vedic rituals and ceremonies",
    poojasPerformed: "Poojas Performed",
    performedDesc: "Bringing peace and blessings across all India",
    popularPoojasTitle: "Most Popular Poojas",
    bookNow: "Book Now",
    testimonialsTitle: "Words of Devotion",
    bookingTitle: "Book a Divine Experience",
    fullName: "Full Name",
    phone: "Phone Number",
    poojaType: "Pooja Type",
    preferredDate: "Preferred Date",
    message: "Additional Message",
    sendOnWhatsApp: "Send Booking Request on WhatsApp",
    footerContact: "Vedic Pooja & Astrology Services",
    footerSpecialPoojas: "Special Pooja Services",
    footerPoojaServices: "Pooja Services",
    footerQuickLinks: "Quick Links",
    footerContactInfo: "Contact Info"
  },
  hi: {
    navHome: "рд╣реЛрдо",
    navAbout: "рд╣рдорд╛рд░реЗ рдмрд╛рд░реЗ рдореЗрдВ",
    navServices: "рд╕реЗрд╡рд╛рдПрдВ",
    navAstrology: "рдЬреНрдпреЛрддрд┐рд╖",
    navTestimonials: "рдкреНрд░рд╢рдВрд╕рд╛рдкрддреНрд░",
    navBlog: "рдмреНрд▓реЙрдЧ",
    navContact: "рд╕рдВрдкрд░реНрдХ",
    heroHeadline: "тЬи рдЕрдм рдШрд░ рдмреИрдареЗ рдХрд░рд╡рд╛рдПрдВ рдЕрд╕рд▓реА рд╡реИрджрд┐рдХ рдкреВрдЬрд╛",
    heroSubText1: "рд╕рдирд╛рддрди рдзрд░реНрдо рдХреА рджрд┐рд╡реНрдп рдХреГрдкрд╛ рдХрд╛ рдЕрдиреБрднрд╡ рдХрд░реЗрдВ тАФ рдЕрдиреБрднрд╡реА рдФрд░ рд╡рд┐рд╢реНрд╡рд╕рдиреАрдп рдкрдВрдбрд┐рддреЛрдВ рджреНрд╡рд╛рд░рд╛ рдХреА рдЬрд╛рдиреЗ рд╡рд╛рд▓реА рд╢реБрджреНрдз рд╡реИрджрд┐рдХ рдкреВрдЬрд╛рдПрдВ, рдЬреНрдпреЛрддрд┐рд╖ рдкрд░рд╛рдорд░реНрд╢ рдФрд░ рд╡рд┐рд╢реЗрд╖ рдЕрдиреБрд╖реНрдард╛рди рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗред",
    heroSubText2: "ЁЯУ┐ рд╢реНрд░рджреНрдзрд╛, рд╢реБрджреНрдзрддрд╛ рдФрд░ рд╡реЗрджрд┐рдХ рд╡рд┐рдзрд┐ рд╕реЗ рдЖрдкрдХреЗ рдШрд░ рдореЗрдВ рд╕реБрдЦ, рд╕рдореГрджреНрдзрд┐ рдФрд░ рд╕рдХрд╛рд░рд╛рддреНрдордХ рдКрд░реНрдЬрд╛ рд▓рд╛рдиреЗ рдХрд╛ рд╣рдорд╛рд░рд╛ рд╕рдВрдХрд▓реНрдкред",
    bookPoojaNow: "ЁЯХЙя╕П рдЕрднреА рдЕрдкрдиреА рдкреВрдЬрд╛ рдмреБрдХ рдХрд░реЗрдВ",
    bookAstrology: "ЁЯФо рдЬреНрдпреЛрддрд┐рд╖ рд╕рддреНрд░ рдмреБрдХ рдХрд░реЗрдВ",
    servicesTitle: "рд╣рдорд╛рд░реА рджрд┐рд╡реНрдп рд╕реЗрд╡рд╛рдПрдВ",
    poojaServices: "рдкреВрдЬрд╛ рд╕реЗрд╡рд╛рдПрдВ",
    astrologyServices: "рдЬреНрдпреЛрддрд┐рд╖",
    onlinePooja: "рдСрдирд▓рд╛рдЗрди / рдИ-рдкреВрдЬрд╛",
    learnMore: " рдФрд░ рдЬрд╛рдиреЗрдВ тЖТ",
    aboutTitle: "рдорд┐рд▓рд┐рдП рдкрдВрдбрд┐рдд рдЖрджрд┐рддреНрдп рдирд╛рд░рд╛рдпрдг рдЬреА рд╕реЗ",
    aboutText: "рднрд╛рд░рдд рднрд░ рдореЗрдВ рдкрд╡рд┐рддреНрд░ рдЕрдиреБрд╖реНрдард╛рди рдХрд░рдиреЗ рдХреЗ 12 рд╕реЗ рдЕрдзрд┐рдХ рд╡рд░реНрд╖реЛрдВ рдХреЗ рдЕрдиреБрднрд╡ рдХреЗ рд╕рд╛рде, рдкрдВрдбрд┐рдд рдЖрджрд┐рддреНрдп рдирд╛рд░рд╛рдпрдг рдЬреА рд╕рдирд╛рддрди рд╡рд┐рдзрд┐ рдХреЗ рдЕрдиреБрд╕рд╛рд░ рдХрд┐рдП рдЧрдП рдкреНрд░рд╛рдорд╛рдгрд┐рдХ рд╡реИрджрд┐рдХ рдкреВрдЬрд╛ рдХреЗ рд▓рд┐рдП рдЬрд╛рдиреЗ рдЬрд╛рддреЗ рд╣реИрдВред рдЕрдкрдиреЗ рдкрд┐рддрд╛, рдПрдХ рд╕рдореНрдорд╛рдирд┐рдд рдкреБрдЬрд╛рд░реА рдХреЗ рдорд╛рд░реНрдЧрджрд░реНрд╢рди рдореЗрдВ, рд╡рд╣ рднрдХреНрддрд┐ рдФрд░ рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рд╕реЗрд╡рд╛ рдХреА рд╡рд┐рд░рд╛рд╕рдд рдХреЛ рдЬрд╛рд░реА рд░рдЦреЗ рд╣реБрдП рд╣реИрдВред",
    readMore: "рдФрд░ рдкрдврд╝реЗрдВ",
    whyChooseUsTitle: "рд╣рдореЗрдВ рдХреНрдпреЛрдВ рдЪреБрдиреЗрдВ?",
    spiritualGuides: "рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдорд╛рд░реНрдЧрджрд░реНрд╢рдХ",
    guidesDesc: "рдкреБрдЬрд╛рд░реА, рдкрдВрдбрд┐рдд, рдзрд╛рд░реНрдорд┐рдХ рд╡рд┐рд╢реЗрд╖рдЬреНрдЮ рдФрд░ рд╕рд▓рд╛рд╣рдХрд╛рд░",
    typesOfPooja: "рдкреВрдЬрд╛ рдХреЗ рдкреНрд░рдХрд╛рд░",
    poojaDesc: "рд╕рднреА рдкреНрд░рдореБрдЦ рд╡реИрджрд┐рдХ рдЕрдиреБрд╖реНрдард╛рдиреЛрдВ рдФрд░ рд╕рдорд╛рд░реЛрд╣реЛрдВ рдХреЛ рд╢рд╛рдорд┐рд▓ рдХрд░рддреЗ рд╣реБрдП",
    poojasPerformed: "рдкреВрдЬрд╛ рд╕рдВрдкрдиреНрди рд╣реБрдИ",
    performedDesc: "рдкреВрд░реЗ рднрд╛рд░рдд рдореЗрдВ рд╢рд╛рдВрддрд┐ рдФрд░ рдЖрд╢реАрд░реНрд╡рд╛рдж рд▓рд╛рдирд╛",
    popularPoojasTitle: "рд╕рдмрд╕реЗ рд▓реЛрдХрдкреНрд░рд┐рдп рдкреВрдЬрд╛",
    bookNow: "рдЕрднреА рдмреБрдХ рдХрд░реЗрдВ",
    testimonialsTitle: "рднрдХреНрддрд┐ рдХреЗ рд╢рдмреНрдж",
    bookingTitle: "рдПрдХ рджрд┐рд╡реНрдп рдЕрдиреБрднрд╡ рдмреБрдХ рдХрд░реЗрдВ",
    fullName: "рдкреВрд░рд╛ рдирд╛рдо",
    phone: "рдлрд╝реЛрди рдирдВрдмрд░",
    poojaType: "рдкреВрдЬрд╛ рдХрд╛ рдкреНрд░рдХрд╛рд░",
    preferredDate: "рдкрд╕рдВрджреАрджрд╛ рддрд╛рд░реАрдЦ",
    message: "рдЕрддрд┐рд░рд┐рдХреНрдд рд╕рдВрджреЗрд╢",
    sendOnWhatsApp: "рд╡реНрд╣рд╛рдЯреНрд╕рдПрдк рдкрд░ рдмреБрдХрд┐рдВрдЧ рдЕрдиреБрд░реЛрдз рднреЗрдЬреЗрдВ",
    footerContact: "рд╡реИрджрд┐рдХ рдкреВрдЬрд╛ рдФрд░ рдЬреНрдпреЛрддрд┐рд╖ рд╕реЗрд╡рд╛рдПрдВ",
    footerSpecialPoojas: "рд╡рд┐рд╢реЗрд╖ рдкреВрдЬрд╛ рд╕реЗрд╡рд╛рдПрдВ",
    footerPoojaServices: "рдкреВрдЬрд╛ рд╕реЗрд╡рд╛рдПрдВ",
    footerQuickLinks: "рддреНрд╡рд░рд┐рдд рд▓рд┐рдВрдХ",
    footerContactInfo: "рд╕рдВрдкрд░реНрдХ рдЬрд╛рдирдХрд╛рд░реА"
  },
  mr: {
    navHome: "рдореБрдЦреНрдпрдкреГрд╖реНрда",
    navAbout: "рдЖрдордЪреНрдпрд╛рдмрджреНрджрд▓",
    navServices: "рд╕реЗрд╡рд╛",
    navAstrology: "рдЬреНрдпреЛрддрд┐рд╖",
    navTestimonials: "рдкреНрд░рд╢рдВрд╕рд╛рдкрддреНрд░",
    navBlog: "рдмреНрд▓реЙрдЧ",
    navContact: "рд╕рдВрдкрд░реНрдХ",
    heroHeadline: "тЬи рдШрд░рдмрд╕рд▓реНрдпрд╛ рдЕрдиреБрднрд╡рд╛ рдЦрд▒реНрдпрд╛ рд╡реИрджрд┐рдХ рдкреВрдЬрд╛рдВрдЪрд╛ рджрд┐рд╡реНрдп рдЕрдиреБрднрд╡",
    heroSubText1: "рд╕рдирд╛рддрди рдзрд░реНрдорд╛рдЪреНрдпрд╛ рдЖрд╢реАрд░реНрд╡рд╛рджрд╛рдиреЗ рдЕрдиреБрднрд╡рд╛ рдЦрд▒реНрдпрд╛ рд╡реИрджрд┐рдХ рдкреВрдЬрд╛, рд╡реИрдпрдХреНрддрд┐рдХ рдЬреНрдпреЛрддрд┐рд╖ рдЙрдкрд╛рдп рдЖрдгрд┐ рдкрд╡рд┐рддреНрд░ рд╡рд┐рдзреА, рдЖрдордЪреЗ резреи+ рд╡рд░реНрд╖рд╛рдВрдЪрд╛ рдЕрдиреБрднрд╡ рдЕрд╕рд▓реЗрд▓реЗ рд╡рд┐рд╢реНрд╡рд╕рдиреАрдп рдкреБрдЬрд╛рд░реА рдкреБрдгреЗ, рдореБрдВрдмрдИ, рдирд╛рд╢рд┐рдХ, рдирд╛рдЧрдкреВрд░ рдЖрдгрд┐ рдЗрддрд░ рд╢рд╣рд░рд╛рдВрдордзреНрдпреЗ рд╕реЗрд╡рд╛ рджреЗрддрд╛рддред",
    heroSubText2: "ЁЯУ┐ рдЖрдкрд▓реНрдпрд╛ рдШрд░реА рд╢рд╛рдВрддреА, рд╕рдореГрджреНрдзреА рдЖрдгрд┐ рд╕рдХрд╛рд░рд╛рддреНрдордХ рдКрд░реНрдЬрд╛ рдЖрдгрдгреНрдпрд╛рд╕рд╛рдареА рдЖрдореНрд╣реА рд╕рдорд░реНрдкрд┐рдд рдЖрд╣реЛрддред",
    bookPoojaNow: "ЁЯХЙя╕П рдЖрддреНрддрд╛рдЪ рдЖрдкрд▓реА рдкреВрдЬрд╛ рдмреБрдХ рдХрд░рд╛",
    bookAstrology: "ЁЯФо рдЬреНрдпреЛрддрд┐рд╖ рд╕рддреНрд░ рдмреБрдХ рдХрд░рд╛",
    servicesTitle: "рдЖрдордЪреНрдпрд╛ рджрд┐рд╡реНрдп рд╕реЗрд╡рд╛",
    poojaServices: "рдкреВрдЬрд╛ рд╕реЗрд╡рд╛",
    astrologyServices: "рдЬреНрдпреЛрддрд┐рд╖",
    onlinePooja: "рдСрдирд▓рд╛рдЗрди / рдИ-рдкреВрдЬрд╛",
    learnMore: "рдЕрдзрд┐рдХ рдЬрд╛рдгреВрди рдШреНрдпрд╛ тЖТ",
    aboutTitle: "рднреЗрдЯрд╛ рдкрдВрдбрд┐рдд рдЖрджрд┐рддреНрдп рдирд╛рд░рд╛рдпрдг рдЬреА",
    aboutText: "рднрд╛рд░рддрднрд░ рдкрд╡рд┐рддреНрд░ рд╡рд┐рдзреА рдХрд░рдгреНрдпрд╛рдЪрд╛ 12 рд╡рд░реНрд╖рд╛рдВрдкреЗрдХреНрд╖рд╛ рдЬрд╛рд╕реНрдд рдЕрдиреБрднрд╡ рдЕрд╕рд▓реЗрд▓реЗ рдкрдВрдбрд┐рдд рдЖрджрд┐рддреНрдп рдирд╛рд░рд╛рдпрдг рдЬреА рд╕рдирд╛рддрди рд╡рд┐рдзреАрдиреБрд╕рд╛рд░ рдХреЗрд▓реЗрд▓реНрдпрд╛ рдЕрд╕реНрд╕рд▓ рд╡реИрджрд┐рдХ рдкреВрдЬреЗрд╕рд╛рдареА рдУрд│рдЦрд▓реЗ рдЬрд╛рддрд╛рддред рддреНрдпрд╛рдВрдЪреЗ рд╡рдбреАрд▓, рдПрдХ рдЖрджрд░рдгреАрдп рдкреБрдЬрд╛рд░реА, рдпрд╛рдВрдЪреНрдпрд╛ рдорд╛рд░реНрдЧрджрд░реНрд╢рдирд╛рдЦрд╛рд▓реА рддреЗ рднрдХреНрддреА рдЖрдгрд┐ рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рд╕реЗрд╡реЗрдЪрд╛ рд╡рд╛рд░рд╕рд╛ рдкреБрдвреЗ рдЪрд╛рд▓рд╡рдд рдЖрд╣реЗрддред",
    readMore: "рдЕрдзрд┐рдХ рд╡рд╛рдЪрд╛",
    whyChooseUsTitle: "рдЖрдореНрд╣рд╛рд▓рд╛ рдХрд╛ рдирд┐рд╡рдбрд╛?",
    spiritualGuides: "рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдорд╛рд░реНрдЧрджрд░реНрд╢рдХ",
    guidesDesc: "рдкреБрдЬрд╛рд░реА, рдкрдВрдбрд┐рдд, рдзрд╛рд░реНрдорд┐рдХ рддрдЬреНрдЮ рдЖрдгрд┐ рд╕рд▓реНрд▓рд╛рдЧрд╛рд░",
    typesOfPooja: "рдкреВрдЬреЗрдЪреЗ рдкреНрд░рдХрд╛рд░",
    poojaDesc: "рд╕рд░реНрд╡ рдкреНрд░рдореБрдЦ рд╡реИрджрд┐рдХ рд╡рд┐рдзреА рдЖрдгрд┐ рд╕рдорд╛рд░рдВрдн рд╕рдорд╛рд╡рд┐рд╖реНрдЯ рдЖрд╣реЗрдд",
    poojasPerformed: "рдкреВрдЬрд╛ рдХреЗрд▓реА",
    performedDesc: "рд╕рдВрдкреВрд░реНрдг рднрд╛рд░рддрд╛рдд рд╢рд╛рдВрддреА рдЖрдгрд┐ рдЖрд╢реАрд░реНрд╡рд╛рдж рдЖрдгрдд рдЖрд╣реЗ",
    popularPoojasTitle: "рд╕рд░реНрд╡рд╛рдд рд▓реЛрдХрдкреНрд░рд┐рдп рдкреВрдЬрд╛",
    bookNow: "рдЖрддрд╛ рдмреБрдХ рдХрд░рд╛",
    testimonialsTitle: "рднрдХреНрддреАрдЪреЗ рд╢рдмреНрдж",
    bookingTitle: "рдПрдХ рджрд┐рд╡реНрдп рдЕрдиреБрднрд╡ рдмреБрдХ рдХрд░рд╛",
    fullName: "рдкреВрд░реНрдг рдирд╛рд╡",
    phone: "рдлреЛрди рдирдВрдмрд░",
    poojaType: "рдкреВрдЬреЗрдЪрд╛ рдкреНрд░рдХрд╛рд░",
    preferredDate: "рдкрд╕рдВрддреАрдЪреА рддрд╛рд░реАрдЦ",
    message: "рдЕрддрд┐рд░рд┐рдХреНрдд рд╕рдВрджреЗрд╢",
    sendOnWhatsApp: "рд╡реНрд╣реЙрдЯреНрд╕ре▓рдкрд╡рд░ рдмреБрдХрд┐рдВрдЧ рд╡рд┐рдирдВрддреА рдкрд╛рдард╡рд╛",
    footerContact: "рд╡реИрджрд┐рдХ рдкреВрдЬрд╛ рдЖрдгрд┐ рдЬреНрдпреЛрддрд┐рд╖ рд╕реЗрд╡рд╛",
    footerSpecialPoojas: "рд╡рд┐рд╢реЗрд╖ рдкреВрдЬрд╛ рд╕реЗрд╡рд╛",
    footerPoojaServices: "рдкреВрдЬрд╛ рд╕реЗрд╡рд╛",
    footerQuickLinks: "рдЬрд▓рдж рд▓рд┐рдВрдХреНрд╕",
    footerContactInfo: "рд╕рдВрдкрд░реНрдХ рдорд╛рд╣рд┐рддреА"
  },
   kn: {
    navHome: "р▓ор│Бр▓Цр▓кр│Бр▓Я",
    navAbout: "р▓ир▓ор│Нр▓о р▓мр▓Чр│Нр▓Чр│Ж",
    navServices: "р▓╕р│Жр│Хр▓╡р│Жр▓Чр▓│р│Б",
    navAstrology: "р▓Ьр│Нр▓пр│Лр▓др▓┐р▓╖р│Нр▓п",
    navTestimonials: "р▓кр│Нр▓░р▓╢р▓Вр▓╕р▓╛р▓кр▓др│Нр▓░р▓Чр▓│р│Б",
    navBlog: "р▓мр│Нр▓▓р▓╛р▓Чр│Н",
    navContact: "р▓╕р▓Вр▓кр▓░р│Нр▓Хр▓┐р▓╕р▓┐",
    heroHeadline: "тЬи р▓ир▓┐р▓Ьр▓╡р▓╛р▓ж р▓╡р│Зр▓жр▓┐р▓Х р▓кр│Вр▓Ьр│Жр▓Чр▓│р│Б тАФ р▓Ир▓Ч р▓ир▓┐р▓ор│Нр▓о р▓Хр│Нр▓▓р▓┐р▓Хр│Нр▓Хр▓┐р▓ир▓▓р│Нр▓▓р▓┐",
    heroSubText1: "р▓╕р▓ир▓╛р▓др▓и р▓зр▓░р│Нр▓ор▓ж р▓жр▓┐р▓╡р│Нр▓п р▓Хр│Гр▓кр│Жр▓пр▓ир│Нр▓ир│Б р▓Ер▓ир│Бр▓нр▓╡р▓┐р▓╕р▓┐ тАФ 12+ р▓╡р▓░р│Нр▓╖р▓Чр▓│ р▓Ер▓ир│Бр▓нр▓╡ р▓╣р│Кр▓Вр▓жр▓┐р▓ж р▓╡р▓┐р▓╢р│Нр▓╡р▓╛р▓╕р▓╛р▓░р│Нр▓╣ р▓кр▓Вр▓бр▓┐р▓др▓░р│Б р▓ир│Жр▓░р▓╡р│Зр▓░р▓┐р▓╕р│Бр▓╡ р▓Жр▓╕р▓▓р▓┐ р▓╡р│Зр▓жр▓┐р▓Х р▓кр│Вр▓Ьр│Жр▓Чр▓│р│Б, р▓╡р│Ир▓пр▓Хр│Нр▓др▓┐р▓Х р▓Ьр│Нр▓пр│Лр▓др▓┐р▓╖р│Нр▓п р▓╕р▓▓р▓╣р│Ж р▓ор▓др│Нр▓др│Б р▓кр▓╡р▓┐р▓др│Нр▓░ р▓╡р▓┐р▓зр▓┐р▓Чр▓│р│Бред",
    heroSubText2: "ЁЯУ┐ р▓нр▓Хр│Нр▓др▓┐р▓пр▓┐р▓Вр▓ж, р▓╢р│Бр▓жр│Нр▓зр▓др│Жр▓пр▓┐р▓Вр▓ж р▓ир▓┐р▓ор│Нр▓о р▓ор▓ир│Жр▓Чр│Ж р▓╢р▓╛р▓Вр▓др▓┐, р▓Рр▓╢р│Нр▓╡р▓░р│Нр▓п р▓ор▓др│Нр▓др│Б р▓╕р▓Хр▓╛р▓░р▓╛р▓др│Нр▓ор▓Х р▓╢р▓Хр│Нр▓др▓┐р▓пр▓ир│Нр▓ир│Б р▓др▓░р▓▓р│Б р▓ир▓ор│Нр▓о р▓кр│Нр▓░р▓пр▓др│Нр▓иред",
    bookPoojaNow: "ЁЯХЙя╕П р▓Ир▓Чр▓▓р│З р▓ир▓┐р▓ор│Нр▓о р▓кр│Вр▓Ьр│Жр▓пр▓ир│Нр▓ир│Б р▓мр│Бр▓Хр│Н р▓ор▓╛р▓бр▓┐",
    bookAstrology: "ЁЯФо р▓Ьр│Нр▓пр│Лр▓др▓┐р▓╖р│Нр▓п р▓Ер▓зр▓┐р▓╡р│Зр▓╢р▓ир▓╡р▓ир│Нр▓ир│Б р▓мр│Бр▓Хр│Н р▓ор▓╛р▓бр▓┐",
    servicesTitle: "р▓ир▓ор│Нр▓о р▓жр│Ир▓╡р▓┐р▓Х р▓╕р│Зр▓╡р│Жр▓Чр▓│р│Б",
    poojaServices: "р▓кр│Вр▓Ьр▓╛ р▓╕р│Зр▓╡р│Жр▓Чр▓│р│Б",
    astrologyServices: "р▓Ьр│Нр▓пр│Лр▓др▓┐р▓╖р│Нр▓п",
    onlinePooja: "р▓Жр▓ир│НтАМр▓▓р│Ир▓ир│Н / р▓З-р▓кр│Вр▓Ьр│Ж",
    learnMore: "р▓Зр▓ир│Нр▓ир▓╖р│Нр▓Яр│Б р▓др▓┐р▓│р▓┐р▓пр▓┐р▓░р▓┐ тЖТ",
    aboutTitle: "р▓кр▓Вр▓бр▓┐р▓др│Н р▓Жр▓жр▓┐р▓др│Нр▓п р▓ир▓╛р▓░р▓╛р▓пр▓гр│Н р▓Ьр▓┐ р▓Ер▓╡р▓░р▓ир│Нр▓ир│Б р▓нр│Зр▓Яр▓┐ р▓ор▓╛р▓бр▓┐",
    aboutText: "р▓нр▓╛р▓░р▓др▓жр▓╛р▓жр│Нр▓пр▓Вр▓д 12 р▓╡р▓░р│Нр▓╖р▓Чр▓│р▓┐р▓Чр▓┐р▓Вр▓д р▓╣р│Жр▓Ър│Нр▓Ър│Б р▓Хр▓╛р▓▓ р▓кр▓╡р▓┐р▓др│Нр▓░ р▓Жр▓Ър▓░р▓гр│Жр▓Чр▓│р▓ир│Нр▓ир│Б р▓ир▓бр│Жр▓╕р▓┐р▓ж р▓Ер▓ир│Бр▓нр▓╡р▓жр│Кр▓Вр▓жр▓┐р▓Чр│Ж, р▓кр▓Вр▓бр▓┐р▓др│Н р▓Жр▓жр▓┐р▓др│Нр▓п р▓ир▓╛р▓░р▓╛р▓пр▓гр│Н р▓Ьр▓┐ р▓╕р▓ир▓╛р▓др▓и р▓╡р▓┐р▓зр▓┐р▓п р▓кр│Нр▓░р▓Хр▓╛р▓░ р▓ир▓бр│Жр▓╕р▓▓р▓╛р▓Чр│Бр▓╡ р▓Ер▓зр▓┐р▓Хр│Гр▓д р▓╡р│Ир▓жр▓┐р▓Х р▓кр│Вр▓Ьр│Жр▓Чр▓│р▓┐р▓Чр│Ж р▓╣р│Жр▓╕р▓░р│Бр▓╡р▓╛р▓╕р▓┐р▓пр▓╛р▓Чр▓┐р▓жр│Нр▓жр▓╛р▓░р│Жред р▓Ер▓╡р▓░ р▓др▓Вр▓жр│Ж, р▓кр│Вр▓Ьр│Нр▓п р▓Ер▓░р│Нр▓Ър▓Хр▓░ р▓ор▓╛р▓░р│Нр▓Чр▓жр▓░р│Нр▓╢р▓ир▓жр▓▓р│Нр▓▓р▓┐, р▓Ер▓╡р▓░р│Б р▓нр▓Хр│Нр▓др▓┐ р▓ор▓др│Нр▓др│Б р▓Жр▓зр│Нр▓пр▓╛р▓др│Нр▓ор▓┐р▓Х р▓╕р│Зр▓╡р│Жр▓п р▓кр▓░р▓Вр▓кр▓░р│Жр▓пр▓ир│Нр▓ир│Б р▓ор│Бр▓Вр▓жр│Бр▓╡р▓░р▓┐р▓╕р▓┐р▓жр│Нр▓жр▓╛р▓░р│Жред",
    readMore: "р▓ор▓др│Нр▓др▓╖р│Нр▓Яр│Б р▓Ур▓жр▓┐",
    whyChooseUsTitle: "р▓ир▓ор│Нр▓ор▓ир│Нр▓ир│Б р▓Пр▓Хр│Ж р▓Жр▓░р▓┐р▓╕р▓мр│Зр▓Хр│Б?",
    spiritualGuides: "р▓Жр▓зр│Нр▓пр▓╛р▓др│Нр▓ор▓┐р▓Х р▓ор▓╛р▓░р│Нр▓Чр▓жр▓░р│Нр▓╢р▓Хр▓░р│Б",
    guidesDesc: "р▓кр│Бр▓░р│Лр▓╣р▓┐р▓др▓░р│Б, р▓кр▓Вр▓бр▓┐р▓др▓░р│Б, р▓зр▓╛р▓░р│Нр▓ор▓┐р▓Х р▓др▓Ьр│Нр▓Юр▓░р│Б р▓ор▓др│Нр▓др│Б р▓╕р▓▓р▓╣р│Жр▓Чр▓╛р▓░р▓░р│Б",
    typesOfPooja: "р▓кр│Вр▓Ьр│Жр▓п р▓╡р▓┐р▓зр▓Чр▓│р│Б",
    poojaDesc: "р▓Ор▓▓р│Нр▓▓р▓╛ р▓кр│Нр▓░р▓ор│Бр▓Ц р▓╡р│Ир▓жр▓┐р▓Х р▓Жр▓Ър▓░р▓гр│Жр▓Чр▓│р│Б р▓ор▓др│Нр▓др│Б р▓╕р▓ор▓╛р▓░р▓Вр▓нр▓Чр▓│р▓ир│Нр▓ир│Б р▓Тр▓│р▓Чр│Кр▓Вр▓бр▓┐р▓жр│Ж",
    poojasPerformed: "р▓кр│Вр▓Ьр│Жр▓Чр▓│р▓ир│Нр▓ир│Б р▓ир▓бр│Жр▓╕р▓▓р▓╛р▓пр▓┐р▓др│Б",
    performedDesc: "р▓нр▓╛р▓░р▓др▓жр▓╛р▓жр│Нр▓пр▓Вр▓д р▓╢р▓╛р▓Вр▓др▓┐ р▓ор▓др│Нр▓др│Б р▓Жр▓╢р│Ар▓░р│Нр▓╡р▓╛р▓жр▓╡р▓ир│Нр▓ир│Б р▓др▓░р│Бр▓╡р│Бр▓жр│Б",
    popularPoojasTitle: "р▓Ер▓др│Нр▓пр▓Вр▓д р▓Ьр▓ир▓кр│Нр▓░р▓┐р▓п р▓кр│Вр▓Ьр│Жр▓Чр▓│р│Б",
    bookNow: "р▓Ир▓Чр▓▓р│З р▓мр│Бр▓Хр│Н р▓ор▓╛р▓бр▓┐",
    testimonialsTitle: "р▓нр▓Хр│Нр▓др▓┐р▓п р▓ор▓╛р▓др│Бр▓Чр▓│р│Б",
    bookingTitle: "р▓Тр▓Вр▓жр│Б р▓жр│Ир▓╡р▓┐р▓Х р▓Ер▓ир│Бр▓нр▓╡р▓╡р▓ир│Нр▓ир│Б р▓мр│Бр▓Хр│Н р▓ор▓╛р▓бр▓┐",
    fullName: "р▓кр│Вр▓░р│Нр▓г р▓╣р│Жр▓╕р▓░р│Б",
    phone: "р▓жр│Вр▓░р▓╡р▓╛р▓гр▓┐ р▓╕р▓Вр▓Цр│Нр▓пр│Ж",
    poojaType: "р▓кр│Вр▓Ьр│Жр▓п р▓кр│Нр▓░р▓Хр▓╛р▓░",
    preferredDate: "р▓Жр▓жр│Нр▓пр▓др│Жр▓п р▓жр▓┐р▓ир▓╛р▓Вр▓Х",
    message: "р▓╣р│Жр▓Ър│Нр▓Ър│Бр▓╡р▓░р▓┐ р▓╕р▓Вр▓жр│Зр▓╢",
    sendOnWhatsApp: "WhatsApp р▓ир▓▓р│Нр▓▓р▓┐ р▓мр│Бр▓Хр▓┐р▓Вр▓Чр│Н р▓╡р▓┐р▓ир▓Вр▓др▓┐р▓пр▓ир│Нр▓ир│Б р▓Хр▓│р│Бр▓╣р▓┐р▓╕р▓┐",
    footerContact: "р▓╡р│Ир▓жр▓┐р▓Х р▓кр│Вр▓Ьр│Ж р▓ор▓др│Нр▓др│Б р▓Ьр│Нр▓пр│Лр▓др▓┐р▓╖р│Нр▓п р▓╕р│Зр▓╡р│Жр▓Чр▓│р│Б",
    footerSpecialPoojas: "р▓╡р▓┐р▓╢р│Зр▓╖ р▓кр│Вр▓Ьр▓╛ р▓╕р│Зр▓╡р│Жр▓Чр▓│р│Б",
    footerPoojaServices: "р▓кр│Вр▓Ьр▓╛ р▓╕р│Зр▓╡р│Жр▓Чр▓│р│Б",
    footerQuickLinks: "р▓др│Нр▓╡р▓░р▓┐р▓д р▓▓р▓┐р▓Вр▓Хр│НтАМр▓Чр▓│р│Б",
    footerContactInfo: "р▓╕р▓Вр▓кр▓░р│Нр▓Х р▓ор▓╛р▓╣р▓┐р▓др▓┐"
  },
  gj: {
    navHome: "рк╣рлЛрко",
    navAbout: "ркЕркорк╛рк░рк╛ рк╡рк┐рк╢рлЗ",
    navServices: "рк╕рлЗрк╡рк╛ркУ",
    navAstrology: "ркЬрлНркпрлЛркдрк┐рк╖",
    navTestimonials: "рккрлНрк░рк╢ркВрк╕рк╛рккркдрлНрк░рлЛ",
    navBlog: "ркмрлНрк▓рлЛркЧ",
    navContact: "рк╕ркВрккрк░рлНркХ",
    heroHeadline: "тЬи рк╕рк╛ркЪрлА рк╡рлИркжрк┐ркХ рккрлВркЬрк╛ тАФ рк╣рк╡рлЗ ркорк╛ркдрлНрк░ ркПркХ ркХрлНрк▓рк┐ркХркорк╛ркВ",
    heroSubText1: "ркЕркирлБркнрк╡рлЛ рк╕ркирк╛ркдрки ркзрк░рлНркоркирлА ркжрк┐рк╡рлНркп ркХрлГрккрк╛ ркжрлНрк╡рк╛рк░рк╛ ркЦрк░рлА рк╡рлИркжрк┐ркХ рккрлВркЬрк╛, рк╡рлНркпркХрлНркдрк┐ркЧркд ркЬрлНркпрлЛркдрк┐рк╖ рк╕рк▓рк╛рк╣ ркЕркирлЗ рккрк╡рк┐ркдрлНрк░ рк╡рк┐ркзрк┐ркУ, ркЬрлЗ 12+ рк╡рк░рлНрк╖ркирк╛ ркЕркирлБркнрк╡ ркзрк░рк╛рк╡ркдрк╛ рк╡рк┐рк╢рлНрк╡рк╕ркирлАркп рккркВркбрк┐ркдрлЛ ркжрлНрк╡рк╛рк░рк╛ ркХрк░рк╡рк╛ркорк╛ркВ ркЖрк╡рлЗ ркЫрлЗ.",
    heroSubText2: "ЁЯУ┐ рк╢рлБркжрлНркзркдрк╛ ркЕркирлЗ ркнркХрлНркдрк┐ рк╕рк╛ркерлЗ ркдркорк╛рк░рк╛ ркШрк░ркорк╛ркВ рк╢рк╛ркВркдрк┐, рк╕ркорлГркжрлНркзрк┐ ркЕркирлЗ рк╕ркХрк╛рк░рк╛ркдрлНркоркХ ркКрк░рлНркЬрк╛ рк▓рк╛рк╡рк╡рк╛ркирлЛ ркЕркорк╛рк░рлЛ рк╕ркВркХрк▓рлНркк.",
    bookPoojaNow: "ЁЯХЙя╕П рк╣ркоркгрк╛ркВ ркЬ ркдркорк╛рк░рлА рккрлВркЬрк╛ ркмрлБркХ ркХрк░рлЛ",
    bookAstrology: "ЁЯФо ркЬрлНркпрлЛркдрк┐рк╖ рк╕ркдрлНрк░ ркмрлБркХ ркХрк░рлЛ",
    servicesTitle: "ркЕркорк╛рк░рлА ркжрк┐рк╡рлНркп рк╕рлЗрк╡рк╛ркУ",
    poojaServices: "рккрлВркЬрк╛ рк╕рлЗрк╡рк╛ркУ",
    astrologyServices: "ркЬрлНркпрлЛркдрк┐рк╖",
    onlinePooja: "ркУркирк▓рк╛ркИрки / ркИ-рккрлВркЬрк╛",
    learnMore: "рк╡ркзрлБ ркЬрк╛ркгрлЛ тЖТ",
    aboutTitle: "рккркВркбрк┐ркд ркЖркжрк┐ркдрлНркп ркирк╛рк░рк╛ркпркгркЬрлАркирлЗ ркорк│рлЛ",
    aboutText: "ркнрк╛рк░ркдркнрк░ркорк╛ркВ 12 рк╡рк░рлНрк╖ркерлА рк╡ркзрлБ рк╕ркоркпркерлА рккрк╡рк┐ркдрлНрк░ рк╡рк┐ркзрк┐ркУ ркХрк░рк╡рк╛ркирлЛ ркЕркирлБркнрк╡ ркзрк░рк╛рк╡ркдрк╛, рккркВркбрк┐ркд ркЖркжрк┐ркдрлНркп ркирк╛рк░рк╛ркпркгркЬрлА рк╕ркирк╛ркдрки рк╡рк┐ркзрк┐ ркорлБркЬркм ркХрк░рк╡рк╛ркорк╛ркВ ркЖрк╡ркдрлА ркЕркзрк┐ркХрлГркд рк╡рлИркжрк┐ркХ рккрлВркЬрк╛ркУ ркорк╛ркЯрлЗ ркЬрк╛ркгрлАркдрк╛ ркЫрлЗ. ркдрлЗркоркирк╛ рккрк┐ркдрк╛, ркПркХ ркЖрджрд░ркгрлАркп рккрлВркЬрк╛рк░рлАркирк╛ ркорк╛рк░рлНркЧркжрк░рлНрк╢рки рк╣рлЗркарк│, ркдрлЗркУ ркнркХрлНркдрк┐ ркЕркирлЗ ркЖркзрлНркпрк╛ркдрлНркорк┐ркХ рк╕рлЗрк╡рк╛ркирлЛ рк╡рк╛рк░рк╕рлЛ ркЪрк╛рк▓рлБ рк░рк╛ркЦрлЗ ркЫрлЗ.",
    readMore: "рк╡ркзрлБ рк╡рк╛ркВркЪрлЛ",
    whyChooseUsTitle: "ркЕркоркирлЗ ркХрлЗрко рккрк╕ркВркж ркХрк░рлЛ?",
    spiritualGuides: "ркЖркзрлНркпрк╛ркдрлНркорк┐ркХ ркорк╛рк░рлНркЧркжрк░рлНрк╢ркХрлЛ",
    guidesDesc: "рккрлВркЬрк╛рк░рлАркУ, рккркВркбрк┐ркдрлЛ, ркзрк╛рк░рлНркорк┐ркХ ркирк┐рк╖рлНркгрк╛ркдрлЛ ркЕркирлЗ рк╕рк▓рк╛рк╣ркХрк╛рк░рлЛ",
    typesOfPooja: "рккрлВркЬрк╛ркирк╛ рккрлНрк░ркХрк╛рк░рлЛ",
    poojaDesc: "ркмркзрк╛ ркорлБркЦрлНркп рк╡рлИркжрк┐ркХ рк╡рк┐ркзрк┐ркУ ркЕркирлЗ рк╕ркорк╛рк░рлЛрк╣ркирлЗ ркЖрк╡рк░рлА рк▓рлЗ ркЫрлЗ",
    poojasPerformed: "рккрлВркЬрк╛ркУ ркХрк░рк╡рк╛ркорк╛ркВ ркЖрк╡рлА",
    performedDesc: "рк╕ркоркЧрлНрк░ ркнрк╛рк░ркдркорк╛ркВ рк╢рк╛ркВркдрк┐ ркЕркирлЗ ркЖрк╢рлАрк░рлНрк╡рк╛ркж рк▓рк╛рк╡рлЗ ркЫрлЗ",
    popularPoojasTitle: "рк╕рлМркерлА рк╡ркзрлБ рк▓рлЛркХрккрлНрк░рк┐ркп рккрлВркЬрк╛ркУ",
    bookNow: "рк╣ркоркгрк╛ркВ ркмрлБркХ ркХрк░рлЛ",
    testimonialsTitle: "ркнркХрлНркдрк┐ркирк╛ рк╢ркмрлНркжрлЛ",
    bookingTitle: "ркПркХ ркжрк┐рк╡рлНркп ркЕркирлБркнрк╡ ркмрлБркХ ркХрк░рлЛ",
    fullName: "рккрлВрк░рлБркВ ркирк╛рко",
    phone: "рклрлЛрки ркиркВркмрк░",
    poojaType: "рккрлВркЬрк╛ркирлЛ рккрлНрк░ркХрк╛рк░",
    preferredDate: "рккрк╕ркВркжркЧрлАркирлА ркдрк╛рк░рлАркЦ",
    message: "рк╡ркзрк╛рк░рк╛ркирлЛ рк╕ркВркжрлЗрк╢",
    sendOnWhatsApp: "WhatsApp рккрк░ ркмрлБркХрк┐ркВркЧ рк╡рк┐ркиркВркдрлА ркорлЛркХрк▓рлЛ",
    footerContact: "рк╡рлИркжрк┐ркХ рккрлВркЬрк╛ ркЕркирлЗ ркЬрлНркпрлЛркдрк┐рк╖ рк╕рлЗрк╡рк╛ркУ",
    footerSpecialPoojas: "рк╡рк┐рк╢рлЗрк╖ рккрлВркЬрк╛ рк╕рлЗрк╡рк╛ркУ",
    footerPoojaServices: "рккрлВркЬрк╛ рк╕рлЗрк╡рк╛ркУ",
    footerQuickLinks: "ркЭркбрккрлА рк▓рк┐ркВркХрлНрк╕",
    footerContactInfo: "рк╕ркВрккрк░рлНркХ ркорк╛рк╣рк┐ркдрлА"
  }
};

const LanguageContext = React.createContext();

const LanguageProvider = ({ children }) => {
    const [language, setLanguage] = useState('en');
    const t = translations[language];

    return (
        <LanguageContext.Provider value={{ language, setLanguage, t }}>
            {children}
        </LanguageContext.Provider>
    );
};

const useTranslation = () => React.useContext(LanguageContext);


// --- Helper Components & Data ---

const StarIcon = ({ filled = true }) => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill={filled ? "#ffc107" : "none"} stroke="#ffc107" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="h-5 w-5">
        <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon>
    </svg>
);

const GuideIcon = () => (
    <div className="w-20 h-20 bg-orange-100 rounded-full flex items-center justify-center mb-4 mx-auto">
        <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="#E67E22" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle></svg>
    </div>
);
const PoojaTypeIcon = () => (
    <div className="w-20 h-20 bg-orange-100 rounded-full flex items-center justify-center mb-4 mx-auto">
        <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="#E67E22" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"><path d="M6 3h12l4 6-10 12L2 9l4-6"></path><path d="M12 3v18"></path></svg>
    </div>
);
const PoojaPerformedIcon = () => (
    <div className="w-20 h-20 bg-orange-100 rounded-full flex items-center justify-center mb-4 mx-auto">
        <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="#E67E22" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"><path d="M2 16.1A5 5 0 0 1 5.9 20M2 12.05A9 9 0 0 1 9.95 20M2 8a13 13 0 0 1 13 13M22 20a13 13 0 0 0-13-13M14.05 12a9 9 0 0 0-9.9-9.9M18.1 16a5 5 0 0 0-3.9-3.9"></path></svg>
    </div>
);


const testimonials = [
    { name: "Priya Sharma", city: "Mumbai", rating: 5, feedback: "Pandit Ji's guidance was a blessing. The pooja was performed with utmost devotion and brought peace to our family." },
    { name: "рд░рд╛рдЬреЗрд╢ рдХреБрдорд╛рд░", city: "рд╡рд╛рд░рд╛рдгрд╕реА", rating: 5, feedback: "рдкрдВрдбрд┐рдд рдЬреА рдмрд╣реБрдд рдЬреНрдЮрд╛рдиреА рд╣реИрдВред рдЙрдиреНрд╣реЛрдВрдиреЗ рд╣рдорд╛рд░реЗ рдШрд░ рдХреА рдкреВрдЬрд╛ рдмрд╣реБрдд рдЕрдЪреНрдЫреЗ рд╕реЗ рдХрд░рд╡рд╛рдИред рд╣рдо рдмрд╣реБрдд рд╕рдВрддреБрд╖реНрдЯ рд╣реИрдВред" },
    { name: "рд╕реНрдиреЗрд╣рд▓ рдЬреЛрд╢реА", city: "рдкреБрдгреЗ", rating: 5, feedback: "рдкрдВрдбрд┐рддрдЬреАрдВрдиреА рд╕рд╛рдВрдЧрд┐рддрд▓реЗрд▓реЗ рдЙрдкрд╛рдп рдЦреВрдк рдкреНрд░рднрд╛рд╡реА рдард░рд▓реЗ. рддреНрдпрд╛рдВрдЪреНрдпрд╛рдореБрд│реЗ рдорд╛рдЭреНрдпрд╛ рдЖрдпреБрд╖реНрдпрд╛рдд рд╕рдХрд╛рд░рд╛рддреНрдордХ рдмрджрд▓ рдЭрд╛рд▓реЗ." },
    { name: "ркнрк╛рк╡рлЗрк╢ рккркЯрлЗрк▓", city: "ркЕркоркжрк╛рк╡рк╛ркж", rating: 5, feedback: "рккркВркбрк┐ркдркЬрлАркирлА рк╕рк▓рк╛рк╣ ркЦрлВркм ркЬ рк╕ркЪрлЛркЯ ркЕркирлЗ ркЙрккркпрлЛркЧрлА рк╣ркдрлА. ркУркирк▓рк╛ркИрки рккрлВркЬрк╛ркирлЛ ркЕркирлБркнрк╡ рккркг ркЕркжрлНркнрлБркд рк░рк╣рлНркпрлЛ." },
    { name: "Anjali Singh", city: "Kanpur", rating: 5, feedback: "The online pooja felt just as powerful as a physical one. Pandit Ji's energy transcends the screen. Highly recommended." },
];


const blogPosts = [
    { title: "Why Vastu Shanti is Important Before Moving In", description: "Learn about the significance of Vastu Shanti puja for a harmonious and prosperous life in your new home.", image: "https://placehold.co/400x300/FFF7E6/800000?text=Vastu+Shanti" },
    { title: "5 Auspicious Muhurats for Marriage in 2025", description: "Discover the most auspicious dates and times for tying the knot in the upcoming year.", image: "https://placehold.co/400x300/FFF7E6/800000?text=Marriage+Muhurat" },
    { title: "What is Kaal Sarp Dosh and How to Remove It?", description: "An in-depth guide to understanding and mitigating the effects of Kaal Sarp Dosh in your horoscope.", image: kaalSarpDoshImg },
];

const AnimatedSection = ({ children, className = "" }) => {
    return (
        <motion.div
            initial={{ opacity: 0, y: 50 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true, amount: 0.2 }}
            transition={{ duration: 0.6, ease: "easeOut" }}
            className={className}
        >
            {children}
        </motion.div>
    );
};

const AnimatedCounter = ({ to }) => {
    const ref = useRef(null);
    const isInView = useInView(ref, { once: true });
    const [displayValue, setDisplayValue] = useState("0");

    useEffect(() => {
        if (isInView) {
            const controls = animate(0, to, {
                duration: 2,
                onUpdate(value) {
                    setDisplayValue(Math.floor(value).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + "+");
                }
            });
            return () => controls.stop();
        }
    }, [isInView, to]);

    return <h3 ref={ref} className="text-4xl md:text-5xl font-bold text-[#E67E22] mb-2" style={{ fontFamily: "'Cormorant Garamond', serif" }}>{displayValue}</h3>;
};

// --- Main Page Sections ---

const Navbar = () => {
    const { t, language, setLanguage } = useTranslation();
    const languages = [
        { code: 'en', name: 'English' },
        { code: 'hi', name: 'рд╣рд┐рдВрджреА' },
        { code: 'mr', name: 'рдорд░рд╛рдареА' },
        { code: 'kn', name: 'р▓Хр▓ир│Нр▓ир▓б' },
        { code: 'gj', name: 'ркЧрлБркЬрк░рк╛ркдрлА' },
    ];
    const FlamingSunIcon = () => (
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="text-orange-500">
            <circle cx="12" cy="12" r="4" />
            <path d="M12 2v2" />
            <path d="M12 20v2" />
            <path d="m4.93 4.93 1.41 1.41" />
            <path d="m17.66 17.66 1.41 1.41" />
            <path d="M2 12h2" />
            <path d="M20 12h2" />
            <path d="m4.93 19.07 1.41-1.41" />
            <path d="m17.66 6.34 1.41-1.41" />
        </svg>
    );

    const NavLink = ({ href, children }) => (
         <a href={href} className="relative group text-gray-700 font-semibold py-2">
            <span className="relative z-10">{children}</span>
            <span className="absolute bottom-0 left-0 w-full h-0.5 bg-[#E67E22] transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300 ease-out origin-center"></span>
        </a>
    );

    return (
        <header className="bg-white/80 backdrop-blur-md shadow-md fixed w-full z-50">
            <div className="container mx-auto px-4 md:px-8 flex justify-between items-center py-4">
                <div className="flex items-center gap-2 -ml-2">
                    <img src={logoImg} alt="Vedic Pooja Logo" className="h-10 w-auto" />
                </div>
                <nav className="hidden md:flex items-center gap-8">
                    <NavLink href="#home">{t.navHome}</NavLink>
                    <NavLink href="#about">{t.navAbout}</NavLink>
                    <NavLink href="#services">{t.navServices}</NavLink>
                    <NavLink href="#astrology">{t.navAstrology}</NavLink>
                    <NavLink href="#testimonials">{t.navTestimonials}</NavLink>
                    <NavLink href="#blog">{t.navBlog}</NavLink>
                    <NavLink href="#contact">{t.navContact}</NavLink>
                </nav>
                <div className="flex items-center">
                     <select 
                        value={language} 
                        onChange={(e) => setLanguage(e.target.value)}
                        className="bg-transparent border border-gray-300 rounded-md p-2 text-gray-700 focus:outline-none focus:ring-1 focus:ring-[#E67E22]"
                     >
                        {languages.map(lang => (
                            <option key={lang.code} value={lang.code}>{lang.name}</option>
                        ))}
                    </select>
                </div>
            </div>
        </header>
    );
};

const HeroSection = ({ onBookPoojaClick }) => {
    const { t } = useTranslation();
    const navigate = useNavigate();
    const slides = [
        { image: weddingBannerImg },
        { image: ritualsBannerImg },
        { image: astrologyBannerImg },
        { image: matchmakingBannerImg },
    ];
    const [currentSlide, setCurrentSlide] = useState(0);

    useEffect(() => {
        const timer = setInterval(() => {
            setCurrentSlide((prev) => (prev === slides.length - 1 ? 0 : prev + 1));
        }, 5000);
        return () => clearInterval(timer);
    }, [slides.length]);

    return (
        <section id="home" className="relative h-screen w-full flex items-center justify-center text-white overflow-hidden pt-20">
            <AnimatePresence>
                <motion.div
                    key={currentSlide}
                    initial={{ opacity: 0, scale: 1.1 }}
                    animate={{ opacity: 1, scale: 1 }}
                    exit={{ opacity: 0 }}
                    transition={{ duration: 1.5, ease: 'easeInOut' }}
                    className="absolute inset-0 bg-cover bg-center"
                    style={{ backgroundImage: `url(${slides[currentSlide].image})` }}
                />
            </AnimatePresence>
            <div className="absolute inset-0 bg-black/60"></div>
            
            <div className="relative z-10 container mx-auto px-4 text-center flex flex-col items-center">
                 <motion.h1
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.7, delay: 0.5 }}
                    className="text-4xl md:text-6xl font-extrabold mb-4"
                    style={{ fontFamily: "'Cormorant Garamond', serif", textShadow: '2px 2px 8px rgba(0,0,0,0.7)' }}
                >
                    {t.heroHeadline}
                </motion.h1>
                <motion.p 
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.7, delay: 0.7 }}
                    className="text-lg md:text-xl max-w-3xl mx-auto mb-4"
                    style={{ textShadow: '1px 1px 4px rgba(0,0,0,0.7)' }}
                >
                    {t.heroSubText1}
                </motion.p>
                 <motion.p 
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.7, delay: 0.9 }}
                    className="text-md md:text-lg max-w-3xl mx-auto mb-8 font-light italic"
                    style={{ textShadow: '1px 1px 4px rgba(0,0,0,0.7)' }}
                >
                    {t.heroSubText2}
                </motion.p>

                <motion.div
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.7, delay: 1.1 }}
                    className="flex flex-col sm:flex-row gap-4"
                >
                    <button onClick={() => navigate('/pooja')} className="px-8 py-3 bg-[#E67E22] text-white font-bold rounded-lg shadow-xl hover:bg-[#c66919] transition-transform transform hover:scale-105 duration-300 ease-in-out">
                        {t.bookPoojaNow}
                    </button>
                     <button onClick={onBookPoojaClick} className="px-8 py-3 bg-transparent border-2 border-white text-white font-bold rounded-lg shadow-xl hover:bg-white hover:text-[#E67E22] transition-colors duration-300 ease-in-out">
                        {t.bookAstrology}
                    </button>
                </motion.div>
            </div>
        </section>
    );
};

const ServicesOverview = () => {
    const { t } = useTranslation();
    const services = [
        { imageSrc: vedicPoojaServicesImg, title: t.poojaServices, link: "/pooja" },
        { imageSrc: astrologyConsultationsImg, title: t.astrologyServices, link: "/astrology" },
        { imageSrc: onlineEPoojaImg, title: t.onlinePooja, link: "/pooja?category=online" },
    ];

    return (
        <section id="services" className="py-20 bg-transparent">
            <div className="container mx-auto px-4">
                <AnimatedSection>
                    <h2 className="text-4xl md:text-5xl font-bold text-center text-[#800000] mb-12" style={{ fontFamily: "'Cormorant Garamond', serif" }}>{t.servicesTitle}</h2>
                    <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
                        {services.map((service, index) => (
                            <motion.a
                                href={service.link}
                                key={index}
                                className="block p-8 bg-white/70 backdrop-blur-sm rounded-xl shadow-lg transition-all duration-300 ease-in-out"
                                initial={{ opacity: 0, y: 50 }}
                                whileInView={{ opacity: 1, y: 0 }}
                                viewport={{ once: true, amount: 0.3 }}
                                transition={{ duration: 0.5, delay: index * 0.2 }}
                                whileHover={{ y: -10, boxShadow: "0px 20px 30px rgba(128, 0, 0, 0.1)"}}
                            >
                                <div className="flex flex-col items-center text-center">
                                    <img src={service.imageSrc} alt={service.title} className="h-24 w-24 mb-4 object-contain" />
                                    <h3 className="text-xl font-semibold text-[#800000] mb-2" style={{ fontFamily: "'Cormorant Garamond', serif" }}>{service.title}</h3>
                                    <span className="text-[#E67E22] font-medium mt-4 group-hover:underline">{t.learnMore}</span>
                                </div>
                            </motion.a>
                        ))}
                    </div>
                </AnimatedSection>
            </div>
        </section>
    );
};

const WhyChooseUsSection = () => {
    const {t} = useTranslation();
    const stats = [
        { icon: <GuideIcon/>, number: 4000, title: t.spiritualGuides, description: t.guidesDesc },
        { icon: <PoojaTypeIcon/>, number: 500, title: t.typesOfPooja, description: t.poojaDesc },
        { icon: <PoojaPerformedIcon/>, number: 1000000, title: t.poojasPerformed, description: t.performedDesc },
    ];

    return (
        <section className="py-20 bg-transparent">
            <div className="container mx-auto px-4">
                <AnimatedSection>
                    <h2 className="text-4xl md:text-5xl font-bold text-center text-[#800000] mb-12" style={{ fontFamily: "'Cormorant Garamond', serif" }}>{t.whyChooseUsTitle}</h2>
                    <div className="grid grid-cols-1 md:grid-cols-3 gap-8 text-center">
                        {stats.map((stat, index) => (
                             <motion.div
                                key={index}
                                className="p-6"
                                initial={{ opacity: 0, y: 50 }}
                                whileInView={{ opacity: 1, y: 0 }}
                                viewport={{ once: true, amount: 0.5 }}
                                transition={{ duration: 0.5, delay: index * 0.2 }}
                            >
                                {stat.icon}
                                <AnimatedCounter to={stat.number} />
                                <p className="text-xl font-semibold text-[#800000] mb-2" style={{ fontFamily: "'Cormorant Garamond', serif" }}>{stat.title}</p>
                                <p className="text-gray-600">{stat.description}</p>
                            </motion.div>
                        ))}
                    </div>
                </AnimatedSection>
            </div>
        </section>
    );
};

const PopularPoojasSection = ({ onBookPoojaClick }) => {
    const { t } = useTranslation();

    // Select specific popular poojas in the exact order specified
    const popularPoojas = [
        poojaServicesData.find(p => p.name === "Engagement Puja (Sagai)"),
        poojaServicesData.find(p => p.name === "Naamkaran Sanskar"),
        poojaServicesData.find(p => p.name === "Shubh Vivah (Marriage Puja)"),
        poojaServicesData.find(p => p.name === "Kaal Sarp Dosh Shanti"),
        poojaServicesData.find(p => p.name === "Birthday Puja (Janmadin Puja)"),
        poojaServicesData.find(p => p.name === "Office Opening Puja (Vastu Puja)"),
        poojaServicesData.find(p => p.name === "Vastu Dosh Nivaran"),
        poojaServicesData.find(p => p.name === "Rudrabhishek"),
        poojaServicesData.find(p => p.name === "Satyanarayan Puja"),
        poojaServicesData.find(p => p.name === "Rudra Yagna"),
        poojaServicesData.find(p => p.name === "Mundan Sanskar"),
        poojaServicesData.find(p => p.name === "Bhoomi Pujan")
    ].filter(Boolean); // Remove any undefined entries

    return (
        <section id="astrology" className="py-20 bg-transparent">
            <div className="container mx-auto px-4">
                <AnimatedSection>
                      <h2 className="text-4xl md:text-5xl font-bold text-center text-[#800000] mb-12" style={{ fontFamily: "'Cormorant Garamond', serif" }}>{t.popularPoojasTitle}</h2>
                      <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-8">
                         {popularPoojas.map((pooja, index) => (
                              <PoojaCard
                                 key={pooja.id}
                                 pooja={pooja}
                                 onBookClick={onBookPoojaClick}
                                 className="h-full"
                              />
                         ))}
                      </div>
                </AnimatedSection>
            </div>
        </section>
    )
}


const AboutPreview = () => {
    const { t } = useTranslation();
    return (
        <section id="about" className="py-20 bg-transparent">
            <div className="container mx-auto px-4">
                <AnimatedSection className="flex flex-col md:flex-row items-center gap-12">
                    <motion.div
                        className="md:w-1/3 flex flex-col gap-4"
                        initial={{ opacity: 0, scale: 0.9 }}
                        whileInView={{ opacity: 1, scale: 1 }}
                        viewport={{ once: true }}
                        transition={{ duration: 0.7 }}
                    >
                        <img src="https://placehold.co/400x400/FFF7E6/800000?text=Pandit+Ji" alt="About Pandit Ji" className="rounded-xl shadow-lg w-full" />
                        <img src="https://placehold.co/400x250/FFF7E6/800000?text=Father's+Photo" alt="Pandit Ji's Father" className="rounded-xl shadow-lg w-full" />
                    </motion.div>
                    <motion.div
                        className="md:w-2/3"
                        initial={{ opacity: 0, x: 50 }}
                        whileInView={{ opacity: 1, x: 0 }}
                        viewport={{ once: true }}
                        transition={{ duration: 0.7, delay: 0.2 }}
                    >
                        <h2 className="text-4xl md:text-5xl font-bold text-[#800000] mb-4" style={{ fontFamily: "'Cormorant Garamond', serif" }}>{t.aboutTitle}</h2>
                        <p className="text-lg text-gray-700 leading-relaxed mb-6">
                           {t.aboutText}
                        </p>
                        <a href="/about" className="px-8 py-3 bg-[#E67E22] text-white font-semibold rounded-lg shadow-md hover:bg-[#c66919] transition-all duration-300">
                           {t.readMore}
                        </a>
                    </motion.div>
                </AnimatedSection>
            </div>
        </section>
    );
};

const GallerySection = () => {
    const galleryImagesRow1 = [
        "https://placehold.co/600x400/FFF7E6/800000?text=Ritual+1",
        "https://placehold.co/600x400/FFF7E6/800000?text=Wedding+Ceremony",
        "https://placehold.co/600x400/FFF7E6/800000?text=Havan",
        "https://placehold.co/600x400/FFF7E6/800000?text=Blessings",
        "https://placehold.co/600x400/FFF7E6/800000?text=Sacred+Fire",
        "https://placehold.co/600x400/FFF7E6/800000?text=Family+Pooja",
    ];
     const galleryImagesRow2 = [
        "https://placehold.co/600x400/FFF7E6/800000?text=Offerings",
        "https://placehold.co/600x400/FFF7E6/800000?text=Mantras",
        "https://placehold.co/600x400/FFF7E6/800000?text=Devotion",
        "https://placehold.co/600x400/FFF7E6/800000?text=Puja+Samagri",
        "https://placehold.co/600x400/FFF7E6/800000?text=Aarti",
        "https://placehold.co/600x400/FFF7E6/800000?text=Celebration",
    ];

    const duplicatedImages1 = [...galleryImagesRow1, ...galleryImagesRow1];
    const duplicatedImages2 = [...galleryImagesRow2, ...galleryImagesRow2];

    return (
         <section className="py-20 bg-transparent overflow-hidden">
              <div className="container mx-auto">
                  <AnimatedSection>
                      <h2 className="text-4xl md:text-5xl font-bold text-center text-[#800000] mb-12" style={{ fontFamily: "'Cormorant Garamond', serif" }}>Pooja Moments</h2>
                  </AnimatedSection>
                  <div className="flex flex-col gap-4" style={{ maskImage: 'linear-gradient(to right, transparent, black 5%, black 95%, transparent)' }}>
                       <motion.div
                           className="flex gap-4"
                           animate={{ x: ['-100%', '0%'] }}
                           transition={{ ease: 'linear', duration: 80, repeat: Infinity }}
                       >
                           {duplicatedImages1.map((img, index) => (
                               <div key={`r1-${index}`} className="flex-shrink-0 w-[400px] h-[250px] overflow-hidden rounded-lg shadow-lg">
                                  <img src={img} alt={`Gallery image ${index + 1}`} className="w-full h-full object-cover" />
                               </div>
                           ))}
                       </motion.div>
                       <motion.div
                           className="flex gap-4"
                           animate={{ x: ['0%', '-100%'] }}
                           transition={{ ease: 'linear', duration: 80, repeat: Infinity }}
                       >
                           {duplicatedImages2.map((img, index) => (
                               <div key={`r2-${index}`} className="flex-shrink-0 w-[400px] h-[250px] overflow-hidden rounded-lg shadow-lg">
                                  <img src={img} alt={`Gallery image ${index + 1}`} className="w-full h-full object-cover" />
                               </div>
                           ))}
                       </motion.div>
                  </div>
              </div>
         </section>
    );
}

const BlogSection = () => {
    const { t } = useTranslation();
    return(
         <section id="blog" className="py-20 bg-transparent">
              <div className="container mx-auto px-4">
                  <AnimatedSection>
                       <h2 className="text-4xl md:text-5xl font-bold text-center text-[#800000] mb-12" style={{ fontFamily: "'Cormorant Garamond', serif" }}>Knowledge Hub</h2>
                       <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
                          {blogPosts.map((post, index) => (
                              <motion.div key={index} className="bg-white/70 backdrop-blur-sm rounded-lg shadow-lg overflow-hidden"
                                initial={{ opacity: 0, y: 50 }}
                                whileInView={{ opacity: 1, y: 0 }}
                                viewport={{ once: true, amount: 0.5 }}
                                transition={{ duration: 0.5, delay: index * 0.2 }}
                              >
                                  <img src={post.image} alt={post.title} className="w-full h-48 object-cover" />
                                  <div className="p-6">
                                      <h3 className="text-xl font-bold text-[#800000] mb-2" style={{ fontFamily: "'Cormorant Garamond', serif" }}>{post.title}</h3>
                                      <p className="text-gray-600 mb-4">{post.description}</p>
                                      <a href="#" className="font-semibold text-[#E67E22] hover:underline">{t.readMore}</a>
                                  </div>
                              </motion.div>
                          ))}
                       </div>
                  </AnimatedSection>
              </div>
         </section>
    );
};


const TestimonialsSlider = () => {
    const { t } = useTranslation();
    const duplicatedTestimonials = [...testimonials, ...testimonials];

    return (
        <section id="testimonials" className="py-20 bg-transparent">
            <div className="container mx-auto">
                <AnimatedSection>
                    <h2 className="text-4xl md:text-5xl font-bold text-center text-[#800000] mb-12" style={{ fontFamily: "'Cormorant Garamond', serif" }}>{t.testimonialsTitle}</h2>
                </AnimatedSection>
                <div className="relative w-full overflow-hidden" style={{ maskImage: 'linear-gradient(to right, transparent, black 10%, black 90%, transparent)' }}>
                    <motion.div
                        className="flex gap-8"
                        animate={{ x: ['-0%', '-100%'] }}
                        transition={{
                            ease: 'linear',
                            duration: 40,
                            repeat: Infinity,
                        }}
                    >
                        {duplicatedTestimonials.map((testimonial, index) => (
                            <div key={index} className="flex-shrink-0 w-80 md:w-96 p-8 bg-white/70 backdrop-blur-sm rounded-xl shadow-lg">
                                <div className="flex items-center mb-4">
                                    {[...Array(testimonial.rating)].map((_, i) => <StarIcon key={i} />)}
                                </div>
                                <p className="text-gray-700 mb-4 italic">"{testimonial.feedback}"</p>
                                <div className="text-right">
                                    <p className="font-bold text-[#800000]" style={{ fontFamily: "'Cormorant Garamond', serif" }}>{testimonial.name}</p>
                                    <p className="text-sm text-gray-500">{testimonial.city}</p>
                                </div>
                            </div>
                        ))}
                    </motion.div>
                </div>
            </div>
        </section>
    );
};

const BookingSection = ({ forwardedRef }) => {
    const { t } = useTranslation();
    const [formData, setFormData] = useState({
        name: '',
        phone: '',
        poojaType: 'Griha Pravesh',
        date: '',
        message: ''
    });

    const handleChange = (e) => {
        const { name, value } = e.target;
        setFormData(prev => ({ ...prev, [name]: value }));
    };

    const handleSubmit = (e) => {
        e.preventDefault();
        const whatsappNumber = "8668552465";
        const prefilledMessage = `Namaste ЁЯЩП, I want to book ${formData.poojaType} on ${formData.date}. My name is ${formData.name}, contact: ${formData.phone}. Message: ${formData.message}`;
        const encodedMessage = encodeURIComponent(prefilledMessage);
        const whatsappUrl = `https://wa.me/${whatsappNumber}?text=${encodedMessage}`;
        window.open(whatsappUrl, '_blank');
    };

    return (
        <section ref={forwardedRef} id="contact" className="py-20 bg-transparent">
            <div className="container mx-auto px-4">
                <AnimatedSection>
                    <h2 className="text-4xl md:text-5xl font-bold text-center text-[#800000] mb-12" style={{ fontFamily: "'Cormorant Garamond', serif" }}>{t.bookingTitle}</h2>
                    <div className="max-w-2xl mx-auto bg-white/80 backdrop-blur-md p-8 rounded-xl shadow-2xl">
                        <form onSubmit={handleSubmit}>
                            <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                                <div>
                                    <label htmlFor="name" className="block text-[#800000] font-medium mb-2">{t.fullName}</label>
                                    <input type="text" id="name" name="name" value={formData.name} onChange={handleChange} className="w-full p-3 border border-orange-200 bg-white/50 rounded-lg focus:ring-2 focus:ring-[#E67E22] focus:outline-none" required />
                                </div>
                                <div>
                                    <label htmlFor="phone" className="block text-[#800000] font-medium mb-2">{t.phone}</label>
                                    <input type="tel" id="phone" name="phone" value={formData.phone} onChange={handleChange} className="w-full p-3 border border-orange-200 bg-white/50 rounded-lg focus:ring-2 focus:ring-[#E67E22] focus:outline-none" required />
                                </div>
                            </div>
                            <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                                <div>
                                    <label htmlFor="poojaType" className="block text-[#800000] font-medium mb-2">{t.poojaType}</label>
                                    <select id="poojaType" name="poojaType" value={formData.poojaType} onChange={handleChange} className="w-full p-3 border border-orange-200 rounded-lg bg-white/50 focus:ring-2 focus:ring-[#E67E22] focus:outline-none">
                                        <option>Griha Pravesh</option>
                                        <option>Shubh Vivah</option>
                                        <option>Satyanarayan Pooja</option>
                                        <option>Vastu Shanti Pooja</option>
                                        <option>Astrology Consultation</option>
                                        <option>Other</option>
                                    </select>
                                </div>
                                <div>
                                    <label htmlFor="date" className="block text-[#800000] font-medium mb-2">{t.preferredDate}</label>
                                    <input type="date" id="date" name="date" value={formData.date} onChange={handleChange} className="w-full p-3 border border-orange-200 rounded-lg bg-white/50 focus:ring-2 focus:ring-[#E67E22] focus:outline-none" />
                                </div>
                            </div>
                            <div className="mb-6">
                                <label htmlFor="message" className="block text-[#800000] font-medium mb-2">{t.message}</label>
                                <textarea id="message" name="message" rows="4" value={formData.message} onChange={handleChange} className="w-full p-3 border border-orange-200 rounded-lg bg-white/50 focus:ring-2 focus:ring-[#E67E22] focus:outline-none"></textarea>
                            </div>
                            <button type="submit" className="w-full py-4 bg-[#E67E22] text-white font-bold text-lg rounded-lg shadow-md hover:bg-[#c66919] transition-all duration-300">
                                {t.sendOnWhatsApp}
                            </button>
                        </form>
                    </div>
                </AnimatedSection>
            </div>
        </section>
    );
};

const FloatingButtons = () => {
    return (
        <div className="fixed bottom-5 right-5 z-50 flex flex-col gap-3">
             <a href="https://wa.me/8668552465" target="_blank" rel="noopener noreferrer" className="bg-green-500 text-white w-14 h-14 rounded-full flex items-center justify-center shadow-lg hover:bg-green-600 transition-transform hover:scale-110">
                <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 24 24" fill="currentColor"><path d="M.057 24l1.687-6.163c-1.041-1.804-1.588-3.849-1.587-5.946.003-6.556 5.338-11.891 11.893-11.891 3.181.001 6.167 1.24 8.413 3.488 2.245 2.248 3.481 5.236 3.48 8.414-.003 6.557-5.338 11.892-11.894 11.892-1.99-.001-3.951-.5-5.688-1.448l-6.305 1.654zm6.597-3.807c1.676.995 3.276 1.591 5.392 1.592 5.448 0 9.886-4.434 9.889-9.885.002-5.462-4.415-9.89-9.881-9.892-5.452 0-9.887 4.434-9.889 9.886-.003 2.011.564 3.996 1.59 5.711l-1.023 3.75z"/></svg>
             </a>
        </div>
    )
}

const Footer = () => {
    const {t} = useTranslation();
    const specialPoojas = ["Griha Pravesh", "Shubh Vivah", "Naamkaran Sanskar"];
    const poojaServices = ["Vastu Shanti", "Pitru Dosh Nivaran", "Rudrabhishek"];
    return (
        <footer className="bg-[#800000] text-orange-100 py-12" style={{fontFamily: "'Lato', sans-serif"}}>
            <div className="container mx-auto px-4 grid grid-cols-1 md:grid-cols-4 gap-8">
                <div className="md:col-span-1">
                     <h3 className="text-xl font-bold mb-4" style={{fontFamily: "'Cormorant Garamond', serif"}}>{t.footerSpecialPoojas}</h3>
                     <ul>
                         {specialPoojas.map(pooja => <li key={pooja} className="mb-2"><a href="#" className="hover:text-white transition-colors">{pooja}</a></li>)}
                     </ul>
                </div>
                 <div>
                     <h3 className="text-xl font-bold mb-4" style={{fontFamily: "'Cormorant Garamond', serif"}}>{t.footerPoojaServices}</h3>
                     <ul>
                         {poojaServices.map(pooja => <li key={pooja} className="mb-2"><a href="#" className="hover:text-white transition-colors">{pooja}</a></li>)}
                     </ul>
                </div>
                 <div>
                     <h3 className="text-xl font-bold mb-4" style={{fontFamily: "'Cormorant Garamond', serif"}}>{t.footerQuickLinks}</h3>
                     <ul>
                         <li className="mb-2"><a href="#about" className="hover:text-white transition-colors">{t.navAbout}</a></li>
                         <li className="mb-2"><a href="#services" className="hover:text-white transition-colors">{t.navServices}</a></li>
                         <li className="mb-2"><a href="#blog" className="hover:text-white transition-colors">{t.navBlog}</a></li>
                     </ul>
                </div>
                 <div>
                     <h3 className="text-xl font-bold mb-4" style={{fontFamily: "'Cormorant Garamond', serif"}}>{t.footerContactInfo}</h3>
                     <p className="mb-2">Email: <a href="mailto:amardwivedi792@gmail.com" className="hover:text-white">amardwivedi792@gmail.com</a></p>
                     <p className="mb-2">WhatsApp: <a href="https://wa.me/8668552465" className="hover:text-white">8668552465</a></p>
                     <p className="mb-2">Instagram: <a href="https://www.instagram.com/adityanarayan3081?igsh=eGI5dnZtNWJ6OGo1" className="hover:text-white">@adityanarayan3081</a></p>
                </div>
            </div>
            <div className="text-center mt-10 pt-6 border-t border-orange-200/20">
                <p className="text-sm text-orange-200">&copy; {new Date().getFullYear()} Vedic Pooja. All Rights Reserved.</p>
            </div>
        </footer>
    );
}

export default function App() {
    const bookingSectionRef = useRef(null);

    useEffect(() => {
        const style = document.createElement('style');
        style.innerHTML = `
            @import url('https://fonts.googleapis.com/css2?family=Cormorant+Garamond:wght@700&family=Lato:wght@400;700&display=swap');
        `;
        document.head.appendChild(style);
    }, []);

    const handleBookPoojaClick = () => {
        bookingSectionRef.current?.scrollIntoView({ behavior: 'smooth' });
    };

    return (
        <LanguageProvider>
            <div 
                style={{
                    fontFamily: "'Lato', sans-serif",
                    backgroundColor: '#FFF7E6',
                    backgroundImage: `url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='40' height='40' viewBox='0 0 40 40'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23E67E22' fill-opacity='0.25'%3E%3Cpath d='M0 38.59l2.83-2.83 1.41 1.41L1.41 40H0v-1.41zM0 1.4l2.83 2.83 1.41-1.41L1.41 0H0v1.41zM38.59 40l-2.83-2.83 1.41-1.41L40 38.59V40h-1.41zM40 1.41l-2.83 2.83-1.41-1.41L38.59 0H40v1.41zM20 18.6l2.83-2.83 1.41 1.41L21.41 20l2.83 2.83-1.41 1.41L20 21.41l-2.83 2.83-1.41-1.41L18.59 20l-2.83-2.83 1.41-1.41L20 18.59z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E")`,
                    backgroundAttachment: 'fixed'
                }}
            >
                <div>
                    <Navbar />
                    <main>
                        <HeroSection onBookPoojaClick={handleBookPoojaClick} />
                        <ServicesOverview />
                        <AboutPreview />
                        <WhyChooseUsSection />
                        <PopularPoojasSection onBookPoojaClick={onBookPoojaClick} />
                        <GallerySection />
                        <TestimonialsSlider />
                        <BlogSection />
                        <BookingSection forwardedRef={bookingSectionRef} />
                    </main>
                    <FloatingButtons />
                    <Footer />
                </div>
            </div>
        </LanguageProvider>
    );
}

